<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="CHAPTER_TEMPLATE">
  <title>Container Costs </title>

  <para>Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod
  tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
  quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut
  aliquid ex ea commodi consequatur. Quis aute iure reprehenderit in voluptate
  velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat
  cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id
  est laborum.</para>

  <sect1 id="Cost_Information">
    <title>Cost Information</title>

    <para>With the advent of the cloud native HPCC Systems platform, we have
    introduced cost information. There are three types of costs that are
    tracked.</para>

    <para><orderedlist>
        <listitem>
          <para>Execution Cost</para>
        </listitem>

        <listitem>
          <para>Storage Cost</para>
        </listitem>

        <listitem>
          <para>File Access Cost</para>
        </listitem>
      </orderedlist></para>

    <sect2 id="ExecutionCost">
      <title>Execution Cost</title>

      <para>Execution Cost is the cost of executing the workunit, graph, and
      subgraphs on the Thor cluster. It includes the cost of all the nodes
      directly required to execute the job and includes the cost of:</para>

      <para><orderedlist>
          <listitem>
            <para>Worker nodes</para>
          </listitem>

          <listitem>
            <para>Compiler nodes</para>
          </listitem>

          <listitem>
            <para>Agent nodes and the manager node</para>
          </listitem>
        </orderedlist></para>

      <para>A workunit's execution cost value is displayed in ECL Watch on its
      summary page and is broken down at the graph, subgraph, and activity
      level. The graph and subgraph cost values are available in the metrics
      and graph viewer.</para>

      <para><variablelist>
          <varlistentry>
            <term>Note:</term>

            <listitem>
              <para>The execution cost of ROXIE workunits is not currently
              implemented.le</para>
            </listitem>
          </varlistentry>
        </variablelist></para>

      <para>Two new columns have been added to the Workunit’s table in ECL
      Watch to show the cost values related to workunits. These can be sorted
      by either cost column.</para>

      <graphic fileref="../../images/SCOST_img1_1.jpg"><!--ADD-IMAGE--></graphic>

      <para>The costs are also shown on the selected Workunits summary page in
      ECL Watch:</para>

      <graphic fileref="../../images/SCOST_img2_1.jpg"><!--ADD-IMAGE--></graphic>

      <sect3>
        <title>Job Guillotine</title>

        <para>The risk of runaway costs is a concern with uncapped usage-based
        charging. Thus the job guillotine feature has been provided to manage
        this risk by setting a limit on the costs that a job may incur.</para>

        <variablelist>
          <varlistentry>
            <term>Note:</term>

            <listitem>
              <para>This feature is only supported for Thor jobs
              currently.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <graphic fileref="../../images/SCOST_img3_1.jpg"><!--ADD-IMAGE--></graphic>
      </sect3>
    </sect2>

    <sect2>
      <title>Storage Cost</title>

      <para>This is the cost of hosting the data in the storage plane. It does
      not include the costs of data operations such as read or write
      costs.</para>

      <para><variablelist>
          <varlistentry>
            <term>Note:</term>

            <listitem>
              <para>Costs are not recorded for temporary or spill files,
              because the local storage is included in the price of the VM
              used to calculate the execution costs.</para>
            </listitem>
          </varlistentry>
        </variablelist></para>

      <para>The storage costs cannot be viewed as a separate value in ECL
      Watch. They can only be viewed as part of a cost field in a logical
      file’s summary page. That cost field includes other file related
      costs.</para>
    </sect2>

    <sect2>
      <title>File Access Cost</title>

      <para>File access costs are the costs of reading and writing to the
      files. Many storage planes do have a separate charge for data
      operations. The cost of reading and writing to the file will be included
      in the file access cost value. Any other cost associated with file
      operations (such as delete or copy) will not be tracked or included as
      part of file access cost at this time.</para>

      <para>The file access cost displays as part of the cost field in the
      Logical File’s summary page in ECL Watch. </para>

      <para>The costs incurred by a workunit for accessing logical files is
      also recorded in the workunit’s statistics and attributes. The
      read/write cost is recorded at the activity record and cumulated at the
      graph, the subgraph and the workflow scope level. The total file access
      cost for a workunit is recorded with the workunit and displayed in the
      summary page.</para>

      <para>The Logical Files table in ECL Watch has been updated to show the
      costs incurred for storing and accessing logical files:</para>

      <graphic fileref="../../images/SCOST_img4_1.jpg"><!--ADD-IMAGE--></graphic>

      <para>The new cost field is shown in the Logical File summary page. It
      is the combined cost of storing and accessing the data.</para>

      <variablelist>
        <varlistentry>
          <term>Note:</term>

          <listitem>
            <para>This new cost field is likely to be replaced by two new
            fields to show at rest cost and access costs separately.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <graphic fileref="../../images/SCOST_img5_1.jpg"><!--ADD-IMAGE--></graphic>

      <para>The cost information is currently only generated for Thor and
      hThor jobs.</para>
    </sect2>

    <sect2>
      <title>Caveats</title>

      <para>All the cost values calculated are approximate. They are intended
      to be used only as a guide. Inaccuracies may result from any of the
      following:</para>

      <para><orderedlist>
          <listitem>
            <para>Not tracking file access from outside the HPCC Systems
            platform</para>
          </listitem>

          <listitem>
            <para>Not tracking file operations other than read/write
            operations</para>
          </listitem>

          <listitem>
            <para>Caching by NFS or OS</para>
          </listitem>

          <listitem>
            <para>Under-utilized nodes</para>
          </listitem>

          <listitem>
            <para>Resources shared between jobs – for example, re-use of a
            compiler node</para>
          </listitem>

          <listitem>
            <para>Any other unknowns</para>
          </listitem>
        </orderedlist></para>
    </sect2>
  </sect1>

  <sect1>
    <title>Costs Configuration</title>

    <para>This section details setting the costs configuration
    parameters.</para>

    <para>The configuration provides the pricing information and currency
    formatting information. The following configuration parameters are
    supported: <orderedlist>
        <listitem>
          <para>currencyCode - Used for currency formatting of cost
          values</para>
        </listitem>

        <listitem>
          <para>perCpu - Cost per hour of a single cpu</para>
        </listitem>

        <listitem>
          <para>storageAtRest - Storage cost per gigabyte per month</para>
        </listitem>

        <listitem>
          <para>storageReads - Cost per 10,000 read operations</para>
        </listitem>

        <listitem>
          <para>storageWrites - Cost per 10,000 write operations</para>
        </listitem>
      </orderedlist></para>

    <sect2>
      <title>Configuring Cloud Costs</title>

      <para>Job costs configuration on a cloud native HPCC Systems instance is
      done using the helm chart. The default <emphasis>values.yaml</emphasis>
      configuration file is configured with the following cost parameters in
      the global/cost section:</para>

      <programlisting>  cost:
    currencyCode: USD
    perCpu: 0.126
    storageAtRest: 0.0135
    storageReads: 0.0485
    storageWrites: 0.0038
</programlisting>

      <para>The <emphasis role="bold">currencyCode</emphasis> attribute should
      be configured with the ISO 4217 country code. (The platform defaults to
      USD if the currency code is missing).</para>

      <para>The <emphasis role="bold">perCpu</emphasis> from the global/cost
      section applies to every component that has not been configured with its
      own perCpu value.</para>

      <para>A perCpu value specific to a component may be set by adding a
      cost/perCPU attribute under that component section.</para>

      <para>For example Dali:</para>

      <programlisting>  dali:
    - name: mydali
      <emphasis role="bold">cost:
        perCpu: </emphasis>0.24</programlisting>

      <para>The Thor components support additional cost parameters which are
      used for the job guillotine feature:</para>

      <orderedlist>
        <listitem>
          <para><emphasis role="bold">limit attribute</emphasis> Sets the
          “soft” cost limit that a workunit may incur. The limit is “soft” in
          that it may be overridden by the <emphasis
          role="bold">maxCost</emphasis> ECL option. A node will be terminated
          if it exceeds its <emphasis role="bold">maxCost</emphasis> value (if
          set) or the limit attribute value (if the <emphasis
          role="bold">maxCost</emphasis> not set).</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">hardlimit attribute</emphasis> Sets the
          absolute maximum cost limit, a limit that may not be overridden by
          setting the ECL option. The <emphasis role="bold">maxCost</emphasis>
          value exceeding the hardlimit will be ignored.</para>
        </listitem>
      </orderedlist>

      <programlisting>thor:
- name: thor
  prefix: thor
  numWorkers: 2
  maxJobs: 4
  maxGraphs: 2
  <emphasis role="bold">cost:
    limit: 10.00   </emphasis>   # maximum cost is $10, overridable with maxCost option
    <emphasis role="bold">hardlimit: 20.00</emphasis>  # maximum cost is $20, cannot be overridden</programlisting>

      <para>The storage cost parameters (<emphasis
      role="bold">storageAtRest</emphasis>, <emphasis
      role="bold">storageReads</emphasis> and <emphasis
      role="bold">storageWrites</emphasis>) may be added under the storage
      plane cost section to set cost parameters specific to the storage
      plane.</para>

      <para>For example:</para>

      <programlisting>storage:
  planes:
  - name: dali
    storageClass: ""
    storageSize: 1Gi
    prefix: "/var/lib/HPCCSystems/dalistorage"
    pvc: mycluster-hpcc-dalistorage-pvc
    category: dali
    <emphasis role="bold">cost:
      storageAtRest:</emphasis> 0.01
      <emphasis role="bold">storageReads:</emphasis> 0.001
      <emphasis role="bold">storageWrites:</emphasis> 0.04
</programlisting>

      <para>The storage cost parameters under the global section are only used
      if no cost parameters are specified on the storage plane.</para>
    </sect2>

    <sect2>
      <title>Costs in Bare Metal</title>

      <para>Setting the costs configuration parameters for the HPCC Systems
      instance on a bare metal deployment is done by editing the
      environment.xml file.</para>

      <para>The cost configuration can only be configured by editing the
      environment.xml file (see the Using Configuration Manager
      documentation). The cost parameters are not supported by and may not be
      amended using the configenv interface.</para>

      <para>The cost parameters are provided as attributes in the “cost” child
      element located under the /Environment/Hardware section as shown in this
      example extract of an environment.xml file :</para>

      <programlisting>&lt;Environment&gt;
 &lt;Hardware&gt;
  &lt;ComputerType …
  &lt;Domain …
  &lt;Computer …
  &lt;Switch …
  &lt;cost currencyCode="USD"
        perCpu="0.113"
        storageAtRest="0.0135"
        storageReads="0.0485"
        storageWrites="0.0038"/&gt;
 &lt;/Harware&gt;</programlisting>
    </sect2>

    <sect2>
      <title>Planned Improvements</title>

      <para>We are actively working on adding new features and improvements in
      future releases.</para>

      <para>The following new features are expected to be added in future
      releases:</para>

      <para><orderedlist>
          <listitem>
            <para>Roxie Cost information</para>
          </listitem>

          <listitem>
            <para>Cost of spraying/despraying</para>
          </listitem>

          <listitem>
            <para>Historic file costs</para>
          </listitem>

          <listitem>
            <para>Support for cost tracking when using Azure hpcc-cache</para>
          </listitem>

          <listitem>
            <para>Track the costs of compilation</para>
          </listitem>

          <listitem>
            <para>Report DALI storage costs</para>
          </listitem>

          <listitem>
            <para>Track costs from deleted work units</para>
          </listitem>

          <listitem>
            <para>Track costs from deleted files</para>
          </listitem>

          <listitem>
            <para>Accumulated cost by user</para>
          </listitem>
        </orderedlist>The cost calculation in HPCC Systems will evolve and
      improve over time. The idea being to better reflect the actual costs
      incurred and report the cost information in a form that is useful and
      accessible is a high priority. Expect the presentation and reporting of
      the cost information to improve as the ongoing development efforts
      continue into the future.</para>
    </sect2>
  </sect1>
</chapter>
