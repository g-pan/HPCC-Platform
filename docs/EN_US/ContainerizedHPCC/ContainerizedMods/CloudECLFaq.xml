<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Transition_to_a-container-based-platform" role="nobrk">
  <title>Transitioning to a Container based platform</title>

  <para>The transition from a traditional bare metal environment to a
  containerized or cloud based HPCC Systems platform should be fairly
  transparent. Once the platform is set up, configured, and properly aligned
  for the types of work being done on it, it should be veritably the same as a
  bare metal installation.</para>

  <para>You can still reach ECL Watch, import data, load, extract, compile,
  and run queries, etc. in very much the same way you would on bare metal.
  However, there are a few minor differences and there can be some
  apprehension about working in a new paradigm. Even experienced HPCC Systems
  developers and ECL Users can have some questions. In light of these concerns
  this section will look to address some of the more frequently asked
  items.</para>

  <sect2 id="GettinStarted_withHPCConACloud" role="nobrk">
    <title>Gettng Started with a Containerized HPCC Systems Platform</title>

    <para>What to know before you begin:</para>

    <para><itemizedlist>
        <listitem>
          <para>Your HPCC Systems ECL Watch server hostname or IP
          address</para>
        </listitem>

        <listitem>
          <para>Your HPCC Systems Dali hostname or IP address</para>
        </listitem>

        <listitem>
          <para>Your HPCC Systems username and password</para>
        </listitem>

        <listitem>
          <para>How to access ECL Watch</para>
        </listitem>

        <listitem>
          <para>Using a client interface</para>
        </listitem>
      </itemizedlist></para>

    <para>You can choose to use any client interface tool such as the ECL IDE,
    command line ECL, or third-party tools such as Microsoft VS Code. All
    these should work the same as they do with a bare-metal deployments--just
    point to the appropriate service instance.</para>

    <para>One of differences is in the architecture. Bare metal services were
    bound to physical hardware. In the cloud think in terms of services. Each
    component as a service. Each of these services can be running on their own
    virtual hardware. Where several services may have shared a physical IP
    address, in the cloud these can all be separate. ECL Watch can have its
    own IP address and a Web Service could be on another. In fact since those
    IP addresses can change, you would be better off using fully qualified
    domain names (FQDN) or hostnames instead of the IP Address.</para>
  </sect2>

  <sect2 id="CommonECLCommands">
    <title>Common ECL Commands</title>

    <para>There is complete documentation available for the entire ECL Command
    Line Interface. For your convenience below are a couple of the common
    relevant ECL Command Line Interface commands.</para>

    <sect3 id="FAQ-CopyPackagemap">
      <title>Copy a packagemap</title>

      <para>To Copy a packagemap:</para>

      <programlisting>ecl packagemap copy &lt;component&gt; &lt;pkgname&gt; -s &lt;HPCC_Host&gt; --daliip=&lt;dali_Host&gt; -u &lt;usrnme&gt; -pw &lt;passwd&gt; </programlisting>

      <para>In the above example, the --daliip=&lt;dali_Host&gt; value is the
      source data's Dali IP address or hostname.</para>
    </sect3>

    <sect3 id="FAQ_AddPackagemap">
      <title>Add a packagemap</title>

      <para>To Add a packagemap</para>

      <programlisting>ecl Packagemap add roxie &lt;pkgname&gt; -s &lt;HPCC_Host&gt; --daliip=&lt;dali_Host&gt; -u &lt;usrnme&gt; -pw &lt;passwd&gt;</programlisting>

      <para>Once again, the --daliip=&lt;dali_Host&gt; value is the source
      data's Dali IP or hostname.</para>
    </sect3>

    <sect3>
      <title>DFU Plus</title>

      <para>Using DFUPlus to spray and/or despray</para>

      <programlisting>dfuplus action=spray srcip=&lt;srcfile&gt; dstcluster=&lt;mythor&gt; format=csv</programlisting>

      <para>For example, to spray a file to a cloud landing zone:</para>

      <para><programlisting>Perhaps Krishna can provide an example??</programlisting>***</para>
    </sect3>
  </sect2>

  <sect2 id="Container_FAQ" role="brk">
    <title>Cloud/Container FAQ</title>

    <orderedlist>
      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How I can compile a query
        on a containerized or cloud-based system?</para>

        <para><emphasis role="strong">A</emphasis>: Same way as bare metal.
        Command line, or with the IDE, or from ECL Watch. Just point to the
        HPCC Systems instance to compile.</para>

        <para>For Example:</para>

        <programlisting>ecl deploy &lt;target&gt; &lt;file&gt;</programlisting>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How do I copy queries from
        an on-prem cluster to Azure?</para>

        <para><emphasis role="strong">A</emphasis>: The copy query command –
        use the Azure host name or IP address for the target.</para>

        <para>For example:</para>

        <programlisting>ecl queries copy &lt;source_query_path&gt; &lt;target_queryset&gt;</programlisting>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How can I get the IP
        address for the Azure target cluster?</para>

        <para><emphasis role="strong">A</emphasis>: Use the "kubectl get svc"
        command. Use the external IP address listed for ECL Watch.</para>

        <para><programlisting>kubectl get svc</programlisting></para>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: Do we have to have use the
        DNSName or do we need to use the IP address?</para>

        <para><emphasis role="strong">A</emphasis>: If you can reach ECL Watch
        with the DNS Name then it should also work for the command
        line.</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How can I find the ECL
        Watch or Dali hostname?</para>

        <para><emphasis role="strong">A</emphasis>: If you did not set up the
        containerized instance, then you need to ask your Systems
        Administrator or whomever set it up..</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How do I publish a package
        file?</para>

        <para><emphasis role="strong">A</emphasis>: Same way as bare metal.
        Command line &gt; ecl publish &lt;parameters&gt; or use ECLWatch &gt;
        publish</para>

        <para>For example to publish findperson.ecl to Roxie:</para>

        <programlisting>ecl publish roxie findperson.ecl --name=FindPersonService -A</programlisting>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How do I check the
        logs?</para>

        <para><emphasis role="strong">A</emphasis>: kubectl log
        &lt;podname&gt;</para>

        <para>in addition you can use -f (follow) option to tail the logs.
        Optionally you can also issue the &lt;namespace&gt; parameter.</para>

        <para>For example:</para>

        <programlisting>kbectl log roxie-agent-1-3b12a587b –namespace MyNameSpace</programlisting>

        <para>Optionally, you may have implemented a log-processing solution
        such as the Elastic Stack (elastic4hpcclogs).</para>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: How do I get the data on
        to Azure?</para>

        <para><emphasis role="strong">A</emphasis>: Use the copy query command
        and copy or add the Packagemap.</para>

        <para>With data copy start in the logs…copy from remote location
        specified if data doesn’t exist on the local system.</para>

        <para>The remote location is the remote Dali (use the
        --daliip=&lt;daliIP&gt; parameter to specify the remote Dali)</para>

        <para>You can also use ECL Watch.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Q:</emphasis> How can I start a cloud
        cluster? (akin to the old Virtual Box image)?</para>

        <para><emphasis role="bold">A</emphasis>: Can use Docker Desktop, or
        Azure or any cloud provider and install the HPCC Systems Cloud native
        helm charts</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Q:</emphasis> How can I execute a command
        in a specific pod?</para>

        <para><emphasis role="bold">A</emphasis>: use the kubectl exec
        &lt;pod&gt; -- command </para>

        <para>For example:</para>

        <programlisting>kubectl exec myeclccserver-69d5cd4876-znf2g  -it -- /bin/sh</programlisting>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Q:</emphasis> How can I show the ECL
        queries that are published to a given Roxie?</para>

        <para><emphasis role="bold">A</emphasis>: Can use WUListQueries</para>

        <para>For example:</para>

        <programlisting>http://[eclwatch]:8010/WsWorkunits/WUListQueries.json?ver_=1.86&amp;ClusterName=roxie&amp;CheckAllNodes=0</programlisting>
      </listitem>

      <listitem>
        <para><emphasis role="strong">Q</emphasis>: I set up persistent
        storage on my containerized HPCC Systems, and now it won't start.
        Why?</para>

        <para><emphasis role="strong">A</emphasis>: One possible reason may be
        that all of the required storage directories are not present. The
        directories for ~/hpccdata/dalistorage, hpcc-data, debug, queries,
        sasha, and dropzone are all required to exist or your cluster may not
        start.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Q:</emphasis> Are there any new methods
        available to work with queries?</para>

        <para><emphasis role="bold">A</emphasis>: Yes. There is a new method
        available ServiceQuery.</para>

        <para>http://[eclwatch]:8010/WsResources/ServiceQuery?ver_=1.01&amp;</para>

        <para>For example Roxie Queries:</para>

        <programlisting>http://[eclwatch]:8010/WsResources/ServiceQuery?ver_=1.01&amp;Type=roxie</programlisting>

        <para>or WsECL (eclqueries)</para>

        <programlisting>http://[eclwatch]:8010/WsResources/ServiceQuery?ver_=1.01&amp;Type=eclqueries</programlisting>
      </listitem>
    </orderedlist>
  </sect2>
</sect1>
